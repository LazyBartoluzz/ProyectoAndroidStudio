@Composable
fun PasadizoModificar( navController: NavController, pedidos : PedidosViewModel,bebidas:BebidasViewModel,meseros : MeserosViewModel,ordenes : OrdenesViewModel,especiales: PlatosEspecialesViewModel,platos :PlatosViewModel  ) {
    // Estados para los 3 campos numéricos
    var number1 by remember { mutableStateOf("") }
    var number2 by remember { mutableStateOf("") }
    var number3 by remember { mutableStateOf("") }

    // Colores personalizados
    val lightOrange = Color(0xFFFFE0B2) // naranja claro
    val skyBlue = Color(0xFF87CEEB)     // azul cielo

    // Fondo dividido con degradado (opcionalmente puedes usar solo uno de los colores)
    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(
                Brush.horizontalGradient(listOf(lightOrange, skyBlue))
            )
            .padding(16.dp)
    ) {
        Column(
            modifier = Modifier.fillMaxSize(),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Row(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                horizontalArrangement = Arrangement.SpaceEvenly
            ) {
                // Columna de botones
                Column(
                    verticalArrangement = Arrangement.spacedBy(16.dp)
                ) {
                    Button(onClick = { println("Número 1: ${number1.toIntOrNull()}") }) {
                        Text("Cambiar plato")
                    }
                    Button(onClick = { println("Número 2: ${number2.toIntOrNull()}") }) {
                        Text("Cambiar bebida")
                    }
                    Button(onClick = { println("Número 3: ${number3.toIntOrNull()}") }) {
                        Text("Cambiar plato bebida")
                    }
                }

                // Columna de campos numéricos
                Column(
                    verticalArrangement = Arrangement.spacedBy(16.dp)
                ) {
                    NumberInputField(value = number1, onValueChange = { number1 = it }, label = "Id plato")
                    NumberInputField(value = number2, onValueChange = { number2 = it }, label = "Id bebida")
                    NumberInputField(value = number3, onValueChange = { number3 = it }, label = "Id plato especial")
                }
            }
        }
    }
}

@Composable
fun NumberInputField(value: String, onValueChange: (String) -> Unit, label: String) {
    TextField(
        value = value,
        onValueChange = { newValue ->
            // Acepta solo enteros
            if (newValue.all { it.isDigit() }) {
                onValueChange(newValue)
            } else if (newValue.isEmpty()) {
                onValueChange("") // permite borrar
            }
        },
        label = { Text(label) },
        singleLine = true,
        keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),
        modifier = Modifier.width(150.dp)
    )
}
